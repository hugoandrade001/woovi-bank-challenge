"use strict";

exports.__esModule = true;
exports.subscriptionWithClientId = subscriptionWithClientId;

var _graphql = require("graphql");

function defaultGetPayload(obj) {
  return obj;
}

function subscriptionWithClientId({
  name,
  inputFields,
  outputFields,
  subscribe,
  getPayload = defaultGetPayload,
  ...config
}) {
  const inputType = new _graphql.GraphQLInputObjectType({
    name: `${name}Input`,
    fields: () => ({ ...(0, _graphql.resolveObjMapThunk)(inputFields || {}),
      clientSubscriptionId: {
        type: _graphql.GraphQLString
      }
    })
  });
  const outputType = new _graphql.GraphQLObjectType({
    name: `${name}Payload`,
    fields: () => ({ ...(0, _graphql.resolveObjMapThunk)(outputFields || {}),
      clientSubscriptionId: {
        type: _graphql.GraphQLString
      }
    })
  });
  return { ...config,
    type: outputType,
    args: {
      input: {
        type: new _graphql.GraphQLNonNull(inputType)
      }
    },
    subscribe: subscribe && ((_obj, {
      input
    }, context, info) => subscribe(input, context, info)),
    resolve: (obj, {
      input
    }, context, info) => Promise.resolve(getPayload(obj, input, context, info)).then(payload => ({ ...payload,
      clientSubscriptionId: input.clientSubscriptionId
    }))
  };
}