import { Model } from 'mongoose';
import { LoaderFn, BuiltConditionSet } from './types';
declare type WithConnectionAggregateConditions = {
    defaultConditions?: object;
    builtMongoConditions: BuiltConditionSet;
};
export declare const withConnectionAggregate: <Context extends object>(model: Model<any>, loader: LoaderFn<Context>, condFn: (...p: any[]) => WithConnectionAggregateConditions) => (...params: any[]) => Promise<{
    edges: {
        cursor: string;
        node: unknown;
    }[];
    count: number;
    endCursorOffset: number;
    startCursorOffset: number;
    pageInfo: {
        startCursor: string | null;
        endCursor: string | null;
        hasPreviousPage: boolean;
        hasNextPage: boolean;
    };
}>;
export {};
